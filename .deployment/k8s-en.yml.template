apiVersion: apps/v1
kind: Deployment
metadata:
  name: expense-memo-bot-en-deployment
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: expense-memo-bot-en
  template:
    metadata:
      labels:
        app: expense-memo-bot-en
    spec:
      containers:
      - name: expense-memo-bot-en
        image: ${IMAGE}
        ports:
        - containerPort: 3000
        env:
          - name: LINE_CHANNEL_ACCESS_TOKEN
            value: ${LINE_CHANNEL_ACCESS_TOKEN}
          - name: LINE_CHANNEL_SECRET
            value: ${LINE_CHANNEL_SECRET}
          - name: BOT_LANG
            value: ${BOT_LANG}
        volumeMounts:
          - name: expense-memo-bot-en-db
            mountPath: /app/db
      volumes:
        - name: expense-memo-bot-en-db
          persistentVolumeClaim:
            claimName: expense-memo-bot-en-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: expense-memo-bot-en-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: expense-memo-bot-en-service
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3000
  selector:
    app: expense-memo-bot-en
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: expense-memo-bot-en-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts: [${DOMAIN}]
    secretName: expense-memo-bot-en-tls
  rules:
    - host: ${DOMAIN}
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: expense-memo-bot-en-service
                port:
                  number: 80
